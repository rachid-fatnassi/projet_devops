version: '3.8'

services:
  spring-boot-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring-boot-app
    ports:
      - "8082:8082"  # Expose port 8082 for your Spring Boot app
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/devops?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
    depends_on:
      - mysql-db
    networks:
      - monitoring

  mysql-db:
    image: mysql:latest
    container_name: mysql-db
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=devops
    ports:
      - "3306:3306"
    networks:
      - monitoring
    volumes:
      - mysql-data:/var/lib/mysql
    restart: always

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    volumes:
      - sonarqube-db-data:/var/lib/postgresql/data
    networks:
      - monitoring
    restart: always

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - "9000:9000"
      - "9092:9092"
    environment:
      - sonar.jdbc.url=jdbc:postgresql://postgres:5432/sonar
      - sonar.jdbc.username=sonar
      - sonar.jdbc.password=sonar
    networks:
      - monitoring
    restart: always
    depends_on:
      - postgres

  nexus:
    image: sonatype/nexus3:latest
    container_name: nexus
    ports:
      - "8081:8081"
    volumes:
      - nexus-data:/nexus-data
    networks:
      - monitoring
    restart: always

networks:
  monitoring:
    driver: bridge

volumes:
  mysql-data:
  sonarqube-data:
  sonarqube-extensions:
  sonarqube-logs:
  sonarqube-db-data:
  nexus-data:

